# DESCRIPTION: GitLab CI/CD for libRetro (NOT FOR GitLab-proper)

##############################################################################
################################# BOILERPLATE ################################
##############################################################################

# Core definitions
.core-defs:
  variables:
    CORENAME: bsnes_hd_beta
    JNI_PATH: bsnes/target-libretro
    MAKEFILE_PATH: bsnes
    MAKEFILE: GNUmakefile
    binary: library
    target: libretro

.core-defs-windows:
  extends: .core-defs
  after_script:
    - mv ${MAKEFILE_PATH}/out/${CORENAME}_libretro.dll ${CORENAME}_libretro.dll
    - if [ $STRIP_CORE_LIB -eq 1 ]; then strip --strip-unneeded ${CORENAME}_libretro.dll; fi
  variables:
    platform: windows

.core-defs-linux:
  extends: .core-defs
  after_script:
    - mv ${MAKEFILE_PATH}/out/${CORENAME}_libretro.so ${CORENAME}_libretro.so
    - if [ $STRIP_CORE_LIB -eq 1 ]; then strip --strip-unneeded ${CORENAME}_libretro.so; fi
  variables:
    platform: linux

.core-defs-osx:
  extends: .core-defs
  after_script:
    - mv ${MAKEFILE_PATH}/out/${CORENAME}_libretro.dylib ${CORENAME}_libretro.dylib
  variables:
    platform: macos

.core-defs-ios-arm64:
  extends: .core-defs
  after_script:
    - mv ${MAKEFILE_PATH}/out/${CORENAME}_libretro_ios.dylib ${CORENAME}_libretro_ios.dylib

.core-defs-tvos-arm64:
  extends: .core-defs
  after_script:
    - mv ${MAKEFILE_PATH}/out/${CORENAME}_libretro_tvos.dylib ${CORENAME}_libretro_tvos.dylib

# Inclusion templates, required for the build to work
include:
  ################################## DESKTOPS ################################
  # Windows 64-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/windows-x64-mingw.yml'
    
  # Windows 32-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/windows-i686-mingw.yml'

  # Linux 64-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/linux-x64.yml'

  # Linux 32-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/linux-i686.yml'

  # MacOS 64-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/osx-x64.yml'
    
  # MacOS ARM 64-bit
  - project: 'libretro-infrastructure/ci-templates'
    file: '/osx-arm64.yml'

  ################################## CELLULAR ################################
  # Android
  - project: 'libretro-infrastructure/ci-templates'
    file: '/android-jni.yml'

  # iOS
  - project: 'libretro-infrastructure/ci-templates'
    file: '/ios-arm64.yml'

  ################################## CONSOLES ################################
  # Nintendo Switch
  - project: 'libretro-infrastructure/ci-templates'
    file: '/libnx-static.yml'

  # AppleTV / tvOS
  - project: 'libretro-infrastructure/ci-templates'
    file: '/tvos-arm64.yml'  

# Stages for building
stages:
  - build-prepare
  - build-shared
  - build-static

##############################################################################
#################################### STAGES ##################################
##############################################################################
#
################################### DESKTOPS #################################
# Windows 64-bit
libretro-build-windows-x64:
  extends:
    - .libretro-windows-x64-mingw-make-default
    - .core-defs-windows
  variables:
    compiler: x86_64-w64-mingw32.static-g++
    
# Windows 32-bit
libretro-build-windows-i686:
  extends:
    - .libretro-windows-i686-mingw-make-default
    - .core-defs-windows
  variables:
    compiler: i686-w64-mingw32.static-g++

# Linux 64-bit
libretro-build-linux-x64:
  extends:
    - .libretro-linux-x64-make-default
    - .core-defs-linux

# Linux 32-bit
libretro-build-linux-i686:
  extends:
    - .libretro-linux-i686-make-default
    - .core-defs-linux

# MacOS 64-bit
libretro-build-osx-x64:
  extends:
    - .libretro-osx-x64-make-default
    - .core-defs-osx

# MacOS ARM 64-bit
libretro-build-osx-arm64:
  extends:
    - .libretro-osx-arm64-make-default
    - .core-defs-osx
  script:
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j$NUMPROC platform=macos target=libretro binary=library local=false openmp=false compiler="c++ -std=c++17 -stdlib=libc++ -target ${LIBRETRO_APPLE_PLATFORM} -isysroot $(xcodebuild -version -sdk macosx  Path)"

################################### CELLULAR #################################
# Android ARMv7a
android-armeabi-v7a:
  extends:
    - .libretro-android-jni-armeabi-v7a
    - .core-defs

# Android ARMv8a
android-arm64-v8a:
  extends:
    - .libretro-android-jni-arm64-v8a
    - .core-defs

# Android 64-bit x86
android-x86_64:
  extends:
    - .libretro-android-jni-x86_64
    - .core-defs
    
# Android 32-bit x86
android-x86:
  extends:
    - .libretro-android-jni-x86
    - .core-defs

# iOS
libretro-build-ios-arm64:
  extends:
    - .libretro-ios-arm64-make-default
    - .core-defs-ios-arm64
  script:
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j$NUMPROC platform=ios-arm64 target=libretro binary=library local=false openmp=false compiler="clang++ -std=c++17 -stdlib=libc++ -arch arm64 -isysroot $(xcodebuild -version -sdk iphoneos Path)"

# tvOS
libretro-build-tvos-arm64:
  extends:
    - .libretro-tvos-arm64-make-default
    - .core-defs-tvos-arm64
  script:
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j$NUMPROC platform=tvos-arm64 target=libretro binary=library local=false openmp=false compiler="clang++ -std=c++17 -stdlib=libc++ -arch arm64 -isysroot $(xcodebuild -version -sdk appletvos Path)"


################################### CONSOLES #################################
# Nintendo Switch
libretro-build-libnx-aarch64:
  extends:
    - .libretro-libnx-static-retroarch-master
    - .core-defs
  script:
    - make -C ${MAKEFILE_PATH} -f ${MAKEFILE} -j$NUMPROC platform=libnx
    - mv ${MAKEFILE_PATH}/out/${CORENAME}_libretro_libnx.a retroarch-precompiled/libretro_libnx.a
    - cd retroarch-precompiled/
    - make -f Makefile.libnx -j10
    - mv retroarch_switch.nro ../${CORENAME}_libretro_libnx.nro
    - mv retroarch_switch.elf ../${CORENAME}_libretro_libnx.elf
    - cd ../
